name: for more than one container ports (final)

on:
  push:
    branches:
      - main

jobs:
  extract-container-info:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.x

    - name: Install pyyaml
      run: |
        python -m pip install pyyaml
        
    - name: Extract Container Info and Issue SSH Commands
      run: |
        yaml_file="pod.yaml"

        python - <<EOF
        import yaml
        # import subprocess

        with open('$yaml_file', 'r') as file:
          data = yaml.safe_load(file)

        container_info = []

        if 'spec' in data and 'containers' in data['spec']:
          for container in data['spec']['containers']:
            container_name = container.get('name')
            container_ports = [port['containerPort'] for port in container.get('ports', [])] if 'ports' in container else []
            if container_name and container_ports:
              container_info.append({'name': container_name, 'ports': container_ports})

        print(container_info)


    - name: Extract Container Info with each conatiner and corresponding port
      run: |
        yaml_file="pod.yaml"

        python - <<EOF
        import yaml
        import subprocess

        with open('$yaml_file', 'r') as file:
          data = yaml.safe_load(file)

        container_info = []

        if 'spec' in data and 'containers' in data['spec']:
          for container in data['spec']['containers']:
              container_name = container.get('name', 'Unnamed Container')
              container_ports = [port['containerPort'] for port in container.get('ports', [])] if 'ports' in container else []
              if container_name and container_ports:
                for port in container_ports:
                  container_info.append({'name': container_name, 'port': port})

        # container_info_dict = {}

        # # Append container_info to container_info_dict
        # for info in container_info:
        #   container_name = info['name']
        #   if container_name not in container_info_dict:
        #     container_info_dict[container_name] = []

        # container_info_dict[container_name].append({'port': info['port']})

        # print(container_info_dict)
        print(container_info)

        EOF
# for info in container_info:
#     for port in info['ports']:
#         ssh_command = f"ssh user@host 'your_command_using_{info['name']}_{port}'"
#         subprocess.run(ssh_command, shell=True
